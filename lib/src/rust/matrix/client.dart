// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../third_party/reqwest/tls.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `restore_session_if_available`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`
// These functions are ignored (category: IgnoreBecauseExplicitAttribute): `get_global_client`, `set_global_client`

/// Configure the client so it's ready for sync'ing.
///
/// Will log in or reuse a previous session.
Future<bool> configureClient({required ClientConfig config}) =>
    RustLib.instance.api.crateMatrixClientConfigureClient(config: config);

class ClientConfig {
  final String sessionPath;
  final String homeserverUrl;
  final List<Certificate>? rootCertificates;
  final String? proxy;

  const ClientConfig({
    required this.sessionPath,
    required this.homeserverUrl,
    this.rootCertificates,
    this.proxy,
  });

  @override
  int get hashCode =>
      sessionPath.hashCode ^
      homeserverUrl.hashCode ^
      rootCertificates.hashCode ^
      proxy.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ClientConfig &&
          runtimeType == other.runtimeType &&
          sessionPath == other.sessionPath &&
          homeserverUrl == other.homeserverUrl &&
          rootCertificates == other.rootCertificates &&
          proxy == other.proxy;
}
