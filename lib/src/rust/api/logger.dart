// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Stream<LogEntry> initLogger() =>
    RustLib.instance.api.crateApiLoggerInitLogger();

Stream<LogEntry> createLogStream() =>
    RustLib.instance.api.crateApiLoggerCreateLogStream();

Future<void> logDebug({required String message}) =>
    RustLib.instance.api.crateApiLoggerLogDebug(message: message);

Future<void> logInfo({required String message}) =>
    RustLib.instance.api.crateApiLoggerLogInfo(message: message);

Future<void> logWarn({required String message}) =>
    RustLib.instance.api.crateApiLoggerLogWarn(message: message);

Future<void> logError({required String message}) =>
    RustLib.instance.api.crateApiLoggerLogError(message: message);

Future<void> log({
  required String level,
  required String message,
  required String tag,
}) => RustLib.instance.api.crateApiLoggerLog(
  level: level,
  message: message,
  tag: tag,
);

class LogEntry {
  final String level;
  final String message;
  final PlatformInt64 timestamp;
  final String tag;

  const LogEntry({
    required this.level,
    required this.message,
    required this.timestamp,
    required this.tag,
  });

  @override
  int get hashCode =>
      level.hashCode ^ message.hashCode ^ timestamp.hashCode ^ tag.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LogEntry &&
          runtimeType == other.runtimeType &&
          level == other.level &&
          message == other.message &&
          timestamp == other.timestamp &&
          tag == other.tag;
}
